{"version":3,"file":"src_app_pages_auth_login_login_module_ts.js","mappings":"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","sources":["./src/app/helper/pagination.helper.ts","./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.module.ts","./src/app/pages/auth/login/login.page.ts","./src/app/service/user.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PaginationHelper {\r\n    constructor() {\r\n    }\r\n\r\n  static async loadData(event, service: any, store: any, limit) {\r\n        try {\r\n            if (store.shouldLoadMore){\r\n                const result = await service.loadMore();\r\n                event.target.complete();\r\n                store.incrementPage();\r\n                if (result.length < limit) {\r\n                    store.setShouldLoadMore(false);\r\n                    event.target.disabled = true;\r\n                }\r\n            }else{\r\n                event.target.disabled = true;\r\n            }\r\n        }catch (e) {\r\n            console.log('Error:', e);\r\n        }\r\n    }\r\n  static async checkExisting(newEl, arr){\r\n        try {\r\n            const resultArray = arr.filter((item) => item.objectId === newEl.objectId);\r\n            if ( resultArray.length > 0){\r\n                return true;\r\n            }\r\n            return false;\r\n\r\n        }catch (e) {\r\n            console.log('Error:',e);\r\n        }\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport {SharedModule} from \"../../../module/shared.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        LoginPageRoutingModule,\r\n        ReactiveFormsModule,\r\n        SharedModule\r\n    ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {UserService} from \"../../../service/user.service\";\r\nimport * as Parse from 'parse';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  isLoading = false;\r\n  errorMessage: string;\r\n\r\n  loginForm = this.formBuilder.group({\r\n    username: new FormControl('', [Validators.required]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n  });\r\n  constructor(private router: Router, private formBuilder: FormBuilder, private userService: UserService) {\r\n    this.errorMessage = '';\r\n  }\r\n  sanitizer(event){\r\n    this.loginForm.get('username').setValue(event.target.value.trim());\r\n  }\r\n\r\n  async login(){\r\n    const username = this.loginForm.value.username.trim();\r\n    const password = this.loginForm.value.password.trim();\r\n    this.isLoading = true;\r\n    await Promise.all([\r\n      this.errorMessage = await this.userService.login(username, password),\r\n    ]);\r\n    if(Parse.User.current()){\r\n      if (Parse.User.current()&&Parse.User.current().get('approved')){\r\n        // await initNotifications();\r\n        this.isLoading = false;\r\n        await this.router.navigate(['']);\r\n      }else if(!Parse.User.current().get('approved')){\r\n        await Parse.User.logOut();\r\n        this.errorMessage = 'Awaiting approval';\r\n      }\r\n    }\r\n    console.log('Set loading to false');\r\n    this.isLoading = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as Parse from 'parse';\r\nimport {PaginationHelper} from '../helper/pagination.helper';\r\nimport {UserStore} from '../store/user.store';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  constructor(private paginationHelper: PaginationHelper, private userStore: UserStore, private router: Router) {\r\n  }\r\n\r\n  async anonymousLogin() {\r\n    try {\r\n      // await Parse.User.logInWith('anonymous', {authData: {\r\n      //     id: '1'\r\n      //   }});\r\n      const user = await Parse.AnonymousUtils.logIn();\r\n      console.log('User: ', user)\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  async login(username, password) {\r\n    try {\r\n      const user = await Parse.User.logIn(username, password);\r\n      // if (Parse.User.current().get('customer_token'))\r\n      return '';\r\n    } catch (e) {\r\n      console.log(e);\r\n      return 'Invalid email or password';\r\n    }\r\n  }\r\n\r\n  async register(email, password, attributes) {\r\n    try {\r\n      const user = await Parse.User.signUp(email, password, attributes);\r\n      return null;\r\n    } catch (e) {\r\n      console.log('Error:', e.message);\r\n      return e.message;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      await Parse.User.logOut();\r\n      await this.router.navigate(['/login']);\r\n    } catch (e) {\r\n      console.log('Error:', e);\r\n    }\r\n  }\r\n\r\n  // async changePoints(){\r\n  //   try {\r\n  //     await\r\n  //   }catch (e) {\r\n  //     console.log('Error: ', e);\r\n  //   }\r\n  // }\r\n\r\n  async editUserRequest(data: any) {\r\n    try {\r\n      const editTable = Parse.Object.extend('Edit_User_Request');\r\n      const edit = new editTable();\r\n      console.log('Saving request data');\r\n      await edit.save(data);\r\n      console.log('Request Data saved');\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  async updateUser(data: any) {\r\n    try {\r\n      await Parse.User.current().save(data);\r\n    } catch (e) {\r\n      console.log('Error', e);\r\n    }\r\n  }\r\n\r\n  async saveUser() {\r\n    try {\r\n      await Parse.User.current().save();\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  // async setUserCity(city: string) {\r\n  //     try {\r\n  //         await Parse.User.current().set('city', city);\r\n  //         await Parse.User.current().save();\r\n  //     } catch (e) {\r\n  //         console.log('Error: ', e);\r\n  //     }\r\n  // }\r\n\r\n  async resetPassword(email) {\r\n    try {\r\n      await Parse.User.requestPasswordReset(email);\r\n      return true;\r\n    } catch (e) {\r\n      console.log('Error:', e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}