{"version":3,"file":"src_app_pages_auth_register_register_module_ts.js","mappings":"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","sources":["./src/app/helper/pagination.helper.ts","./src/app/helper/parse.helper.ts","./src/app/helper/pinpoint.helper.ts","./src/app/pages/auth/register/register-routing.module.ts","./src/app/pages/auth/register/register.module.ts","./src/app/pages/auth/register/register.page.ts","./src/app/service/user.service.ts","./src/app/validators/pw-validation.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PaginationHelper {\r\n    constructor() {\r\n    }\r\n\r\n  static async loadData(event, service: any, store: any, limit) {\r\n        try {\r\n            if (store.shouldLoadMore){\r\n                const result = await service.loadMore();\r\n                event.target.complete();\r\n                store.incrementPage();\r\n                if (result.length < limit) {\r\n                    store.setShouldLoadMore(false);\r\n                    event.target.disabled = true;\r\n                }\r\n            }else{\r\n                event.target.disabled = true;\r\n            }\r\n        }catch (e) {\r\n            console.log('Error:', e);\r\n        }\r\n    }\r\n  static async checkExisting(newEl, arr){\r\n        try {\r\n            const resultArray = arr.filter((item) => item.objectId === newEl.objectId);\r\n            if ( resultArray.length > 0){\r\n                return true;\r\n            }\r\n            return false;\r\n\r\n        }catch (e) {\r\n            console.log('Error:',e);\r\n        }\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport * as Parse from 'parse';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ParseHelper {\r\n    constructor() {\r\n    }\r\n\r\n    static arrayToJSON(parseArray: Parse.Object[]): any[]{\r\n      const jsonArray: any[] = [];\r\n      for(const parseObject of parseArray){\r\n        jsonArray.push(parseObject.toJSON());\r\n      }\r\n      return jsonArray;\r\n    }\r\n    static getParseObjectWithoutData(className: string, id: string): Parse.Object {\r\n    try {\r\n      const ObjectTable = Parse.Object.extend(className);\r\n      const object = ObjectTable.createWithoutData(id);\r\n      return object;\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n      return null;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {SettingsStore} from '../store/settings.store';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PinpointHelper {\r\n    constructor(private settingsStore: SettingsStore) {\r\n    }\r\n\r\n    getCitiesFromCountry(id: string){\r\n      const result = this.settingsStore.cities.filter(city => city.country.objectId === id);\r\n      console.log('Got result: ', result);\r\n      return result;\r\n    }\r\n    getShopsFromCity(id: string){\r\n      // const result = this.settingsStore.shops.filter(shop => shop.city.objectId === id);\r\n      // console.log('Got result: ', result);\r\n      return null;\r\n    }\r\n    // getCategoriesFromBrand(id: string){\r\n    //   const result = this.settingsStore.categories.filter(category => category.brand.objectId === id);\r\n    //   console.log('Got result: ', result);\r\n    //   return result;\r\n    // }\r\n    getCategoriesFromModel(brand: string){\r\n      console.log('Checking models: ', this.settingsStore.models);\r\n      const categories = [];\r\n      for(const model of this.settingsStore.models){\r\n        if(model.brand.objectId===brand && !categories.includes(model.category)){\r\n          categories.push(model.category);\r\n        }\r\n      }\r\n      console.log('Got cat: ', categories);\r\n      return categories;\r\n    }\r\n    getModelsFromCategory(id: string, brandId, shopId: string){\r\n      const models = this.settingsStore.models.filter(model => model.category.objectId === id);\r\n      const result = models.filter((model) => {\r\n        if(model.brand.objectId === brandId){\r\n          for(const shop of model.shopBrands){\r\n            if(shop.objectId === shopId){\r\n              return model;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      console.log('Got result: ', result);\r\n      return result;\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\nimport {SharedModule} from \"../../../module/shared.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUserRegisterAttributes} from '../../../model/user.model';\r\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport {PasswordValidation} from '../../../validators/pw-validation';\r\nimport {Router} from '@angular/router';\r\nimport {UserService} from '../../../service/user.service';\r\nimport {ICountry} from '../../../model/country.model';\r\nimport {ICity} from '../../../model/city.model';\r\nimport {IShop} from '../../../model/shop.model';\r\nimport {SettingsStore} from \"../../../store/settings.store\";\r\nimport {SettingsHelper} from \"../../../helper/settings.helper\";\r\nimport {PinpointHelper} from \"../../../helper/pinpoint.helper\";\r\nimport * as Parse from 'parse';\r\nimport {ParseHelper} from \"../../../helper/parse.helper\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  loaded: boolean;\r\n\r\n  countries: ICountry[];\r\n  cities: ICity[];\r\n  shops: IShop[];\r\n\r\n  errorMessage: string;\r\n\r\n\r\n  registerAttributes: IUserRegisterAttributes;\r\n  registrationForm = this.formBuilder.group({\r\n    firstName: new FormControl('', Validators.required),\r\n    lastName: new FormControl('', Validators.required),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n    country: new FormControl('', Validators.required),\r\n    city: new FormControl('', Validators.required),\r\n    shop: new FormControl('', Validators.required),\r\n    phoneNumber: new FormControl('', Validators.required),\r\n    shopBrand: new FormControl('', Validators.required),\r\n    username: new FormControl('', Validators.required),\r\n    confirmPassword: new FormControl('', Validators.required),\r\n  }, {\r\n    validators: [\r\n      PasswordValidation.matchPassword\r\n    ]\r\n  });\r\n\r\n  constructor(private router: Router, private formBuilder: FormBuilder, private userService: UserService, private pinpointHelper: PinpointHelper, private settingsStore: SettingsStore, private settingsHelper: SettingsHelper) {\r\n    this.loaded = true;\r\n    this.countries = [];\r\n    this.cities = [];\r\n    this.shops = [];\r\n  }\r\n\r\n  sanitizer(event) {\r\n    console.log('event: ', event.data);\r\n\r\n    this.registrationForm.get('email').setValue(event.target.value.trim());\r\n\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    // await this.userService.anonymousLogin();\r\n\r\n    await this.settingsHelper.loadSettings();\r\n    this.countries = this.settingsStore.countries;\r\n    this.cities = [];\r\n    this.shops = this.settingsStore.shops;\r\n  }\r\n\r\n\r\n  onCountryChange(event: any) {\r\n    console.log('Got event: ', event.detail.value);\r\n\r\n  }\r\n\r\n  onCityChange(event: any) {\r\n    console.log('Got event: ', event.detail.value);\r\n    this.shops = this.pinpointHelper.getShopsFromCity(event.detail.value);\r\n  }\r\n\r\n\r\n  formInputIsRequired(formInput: string) {\r\n    if (this.registrationForm.controls[formInput]) {\r\n      if (this.registrationForm.controls[formInput].hasError('required')) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async register() {\r\n    try {\r\n      this.loaded = false;\r\n      const delay = ms => new Promise(res => setTimeout(res, ms));\r\n      await delay(1000);\r\n      const country: Parse.Object = ParseHelper.getParseObjectWithoutData('Country', this.registrationForm.value.country);\r\n      const shopBrand: Parse.Object = ParseHelper.getParseObjectWithoutData('Shop', this.registrationForm.value.shopBrand);\r\n\r\n      this.registerAttributes = {\r\n        firstName: this.registrationForm.value.firstName.trim(),\r\n        lastName: this.registrationForm.value.lastName.trim(),\r\n        email: this.registrationForm.value.email.toLowerCase().trim(),\r\n        country,\r\n        shopBrand,\r\n        city: this.registrationForm.value.city.trim(),\r\n        shop: this.registrationForm.value.shop.trim(),\r\n        phoneNumber: this.registrationForm.value.phoneNumber.trim()\r\n      };\r\n      const username = this.registrationForm.value.username.trim();\r\n      const password = this.registrationForm.value.password.trim();\r\n\r\n      console.log('attributes are: ', this.registerAttributes);\r\n      this.errorMessage = await this.userService.register(username, password, this.registerAttributes);\r\n      this.loaded = true;\r\n      console.log('Loaded: ', this.loaded)\r\n      await delay(1000);\r\n      if (!this.errorMessage) {\r\n        await this.router.navigate(['/login']);\r\n      }\r\n    } catch (e) {\r\n      this.loaded = true;\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as Parse from 'parse';\r\nimport {PaginationHelper} from '../helper/pagination.helper';\r\nimport {UserStore} from '../store/user.store';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  constructor(private paginationHelper: PaginationHelper, private userStore: UserStore, private router: Router) {\r\n  }\r\n\r\n  async anonymousLogin() {\r\n    try {\r\n      // await Parse.User.logInWith('anonymous', {authData: {\r\n      //     id: '1'\r\n      //   }});\r\n      const user = await Parse.AnonymousUtils.logIn();\r\n      console.log('User: ', user)\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  async login(username, password) {\r\n    try {\r\n      const user = await Parse.User.logIn(username, password);\r\n      // if (Parse.User.current().get('customer_token'))\r\n      return '';\r\n    } catch (e) {\r\n      console.log(e);\r\n      return 'Invalid email or password';\r\n    }\r\n  }\r\n\r\n  async register(email, password, attributes) {\r\n    try {\r\n      const user = await Parse.User.signUp(email, password, attributes);\r\n      return null;\r\n    } catch (e) {\r\n      console.log('Error:', e.message);\r\n      return e.message;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      await Parse.User.logOut();\r\n      await this.router.navigate(['/login']);\r\n    } catch (e) {\r\n      console.log('Error:', e);\r\n    }\r\n  }\r\n\r\n  // async changePoints(){\r\n  //   try {\r\n  //     await\r\n  //   }catch (e) {\r\n  //     console.log('Error: ', e);\r\n  //   }\r\n  // }\r\n\r\n  async editUserRequest(data: any) {\r\n    try {\r\n      const editTable = Parse.Object.extend('Edit_User_Request');\r\n      const edit = new editTable();\r\n      console.log('Saving request data');\r\n      await edit.save(data);\r\n      console.log('Request Data saved');\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  async updateUser(data: any) {\r\n    try {\r\n      await Parse.User.current().save(data);\r\n    } catch (e) {\r\n      console.log('Error', e);\r\n    }\r\n  }\r\n\r\n  async saveUser() {\r\n    try {\r\n      await Parse.User.current().save();\r\n    } catch (e) {\r\n      console.log('Error: ', e);\r\n    }\r\n  }\r\n\r\n  // async setUserCity(city: string) {\r\n  //     try {\r\n  //         await Parse.User.current().set('city', city);\r\n  //         await Parse.User.current().save();\r\n  //     } catch (e) {\r\n  //         console.log('Error: ', e);\r\n  //     }\r\n  // }\r\n\r\n  async resetPassword(email) {\r\n    try {\r\n      await Parse.User.requestPasswordReset(email);\r\n      return true;\r\n    } catch (e) {\r\n      console.log('Error:', e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class PasswordValidation {\r\n    static matchPassword(control: AbstractControl) {\r\n        const password = control.get('password').value;\r\n        const confirmPassword = control.get('confirmPassword').value;\r\n\r\n        if (password !== confirmPassword) {\r\n            let errors = control.get('confirmPassword').errors;\r\n            if (errors && typeof errors === 'object') {\r\n                Object.assign(errors, {\r\n                    matchPassword: `Passwords don't match`\r\n                });\r\n            } else {\r\n                errors = {\r\n                    matchPassword: `Passwords don't match`\r\n                };\r\n            }\r\n            control.get('confirmPassword').setErrors(errors);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}